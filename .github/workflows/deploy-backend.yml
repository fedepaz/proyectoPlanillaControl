# .github/workflows/02-deploy-backend.yml
name: Deploy Backend to Production

on:
  push:
    branches: [main]
    paths: ["backEnd/**"]
  workflow_dispatch:
    inputs:
      reason:
        description: "Deployment reason"
        required: true
        default: "Manual deployment"

concurrency:
  group: deploy-backend
  cancel-in-progress: false # Don't cancel backend deployments

jobs:
  pre-deploy-validation:
    name: Pre-deployment Validation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.12.3
      - name: Critical tests only
        working-directory: ./backEnd
        run: |
          pnpm install --frozen-lockfile
          pnpm test:index
          pnpm test:authentication

  deploy-backend:
    name: üöÄ Deploy Backend
    runs-on: ubuntu-latest
    needs: [pre-deploy-validation]
    environment: production
    steps:
      - name: Record deployment start
        run: |
          echo "üöÄ Backend deployment started at $(date)"
          echo "Reason: ${{ github.event.inputs.reason || 'Push to main' }}"

      - name: Trigger Render deployment
        run: |
          curl -X POST "${{ secrets.RENDER_DEPLOY_HOOK_BACKEND }}" \
            -H "Content-Type: application/json" \
            -d '{"reason": "${{ github.event.inputs.reason || 'Auto-deploy from main' }}"}'

      - name: Wait for deployment
        run: |
          echo "‚è≥ Waiting for backend deployment..."
          sleep 60

      - name: Health check with retry
        run: |
          for i in {1..15}; do
            if curl -f -s "${{ secrets.BACKEND_URL }}/health"; then
              echo "‚úÖ Backend deployment successful!"
              exit 0
            fi
            echo "‚è≥ Health check attempt $i/15..."
            sleep 10
          done
          echo "‚ùå Backend deployment failed health check!"
          exit 1

      - name: Notify deployment success
        run: |
          echo "üéâ Backend deployed successfully!"
          echo "URL: ${{ secrets.BACKEND_URL }}"
          echo "Time: $(date)"
