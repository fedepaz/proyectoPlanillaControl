# .github/workflows/deploy-frontend.yml
name: Deploy Frontend

on:
  push:
    branches: [main]
    paths: ["frontEnd/**", ".github/workflows/deploy-frontend.yml"]

jobs:
  # Wait for tests to pass first
  wait-for-tests:
    name: Wait for Tests
    runs-on: ubuntu-latest
    steps:
      - name: Wait for test workflow
        uses: lewagon/wait-on-check-action@v1.3.1
        with:
          ref: ${{ github.ref }}
          check-name: "lint-frontend" # Your frontend test job
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10

  deploy-frontend:
    name: üöÄ Deploy Frontend
    runs-on: ubuntu-latest
    needs: [wait-for-tests]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.12.3

      # Reuse the same dependency installation as test.yml
      - name: Cache Frontend Dependencies
        uses: actions/cache@v3
        with:
          path: frontEnd/node_modules
          key: ${{ runner.os }}-pnpm-frontend-${{ hashFiles('frontEnd/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-frontend

      - name: Install dependencies
        working-directory: ./frontEnd
        run: pnpm install

      - name: Build for production
        working-directory: ./frontEnd
        run: pnpm build

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.ORG_ID }}
          vercel-project-id: ${{ secrets.PROJECT_ID }}
          working-directory: ./frontEnd
          vercel-args: "--prod"

      - name: Frontend health check
        run: |
          sleep 20
          if curl -f "${{ secrets.FRONTEND_URL }}"; then
            echo "‚úÖ Frontend deployed successfully!"
          else
            echo "‚ùå Frontend deployment failed!"
            exit 1
          fi
